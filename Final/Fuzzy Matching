#FuzzyMain.py

#Requirements:
# fuzzywuzzy form: https://pypi.python.org/pypi/fuzzywuzzy#downloads
# BeautifulSoup from: https://www.crummy.com/software/BeautifulSoup/bs4/doc/
# Requests from: http://docs.python-requests.org/en/master/
# Python-Levenstein from: 

#USnews DataSet from: https://github.com/Shengjiezh/Scraping-USNews-College-Ranking/blob/master/ranking_university_USnews.csv


import csv
from fuzzywuzzy import fuzz
import sys
import subprocess
import pandas as pd


#run the script called "Scraping Payscale", to obtain expected earnings after graduation:
PayScaleEarnings = subprocess.check_output([sys.executable, "scrape payscale.py"])
df = pd.read_csv("PayScaleEarnings.csv")
SchoolName = df["School Name"]
df.set_index('School Name').to_dict()  #Convert to a dictionary:

#Use the provided dataset from USNews to obtain acceptance rates per college:
df1 = pd.read_csv('110.Final - Sheet1.csv')
SchoolNameAcceptance = df1["2"]
df1.set_index('2').to_dict()  #Convert to a dictionary:

#Generate a CSV file that will be our output:
# with open('CollegeAcceptanceVSIncome.csv', 'wb') as myfile:  #Please change to your prefered path.
# 	print ""

#measure time time.timeit 

#1st slow iteration:
#Token set ratio - the token set ration orders the words in the same order before checking.
Good_Matches=[]
for k in df:
	for i in SchoolNameAcceptance:
		Fuzzgrades=[fuzz.token_sort_ratio(i,k) for i in SchoolNameAcceptance]
		i+=i
	Good_Matches.append(max(Fuzzgrades)) #this smells like n^2.

#Clean Bad matches:
BadMatches=[]
FinalMatched=[]
for i in Good_Matches:
	if i <=20:
		BadMatches.append(i)
		Good_Matches.remove(i)
	else:
		FinalMatched.append(i)

print FinalMatched

#take time time.timeit  and print.

#Optional:
#Better,faster version iteration:
#take time time.timeit  and print.

#better code

#take time time.timeit  and print.
